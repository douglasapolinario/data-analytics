plot(cars$speed, type="s", col="red", bty="n", xlab="Cars ID", ylab="")
text(8, 14, "Speed in mph", cex=0.85, col="red") # adding the explanatory text to plot 1
text(14, 34, "Speed in mph", cex=0.85, col="red") # adding the explanatory text to plot 1
plot(cars$speed, type="s", col="red", bty="n", xlab="Cars ID", ylab="")
text(14, 34, "Speed in mph", cex=0.85, col="red") # adding the explanatory text to plot 1
text(14, 24, "Speed in mph", cex=0.85, col="red") # adding the explanatory text to plot 1
cars
cars
ls()
set.seed(65)
linx
lynx
rivers
cars
help ?ls
help ?ls()
help ls()
help ls
help(ls)
2 -> a
a <- 1:20
sd(a)
mean(a)
dim(a)
a <- c(1,10)
a <- c(1:10)
sd(a)
mean(a)
dim(a)
rep(1:3, 5)
dim(a)
vector[-c(1,5)]
vector[c(1,5)]
vector[c(1:5)]
col1 <- c(2,1,0)
col2 <- c(5,2,3)
col3 <- c(2,1,0)
matrix <- cbind(col1, col2, col3)
dim(matrix)
matrix[1]
matrix[1,]
matrix[,1]
matrix[1,]
matrix[2,]
sum(matrix)
View(matrix)
View(matrix)
R -version
f <- c(1:5)
f <- c(1:5)
g <- c(1,2,3,4,5)
g <- c(5,4,3,2,1)
sort(g)
sort(f)
sort(g)
rev(f)
rev(g)
rev(sort(g))
sum(f)
sum(g)
sum(f + g)
mean(f)
mean(g)
median(f)
median(g)
g <- c(5,14,23,52,11)
sort(f)
sort(g)
rev(f)
rev(g)
sum(f)
sum(g)
sum(f + g)
mean(f)
mean(g)
median(f)
median(g)
k <- c(1:50)
sum(k)
prod(k)
matrix <- cbind(f,g)
View(matrix)
x <- cbind(f,g)
h <- c(12,44,56,77,89)
y <- cbind(x,h)
View(y)
tx <- t(x)
View(tx)
View(x)
ty <- t(y)
sum(x + y + tx + ty)
sum(x)
sum(y)
sum(tx)
sum(ty)
sum(x, y)
sum(tx, ty)
sum(x, y, tx, ty)
dim(x)
dim(ty)
soma <- sum(x, y, tx, ty)
soma
soma <- sum(x + y + tx + ty)
,
soma <- sum(x, y, tx, ty)
soma
x <- 1:20
y <- x ** 3
plot (x, y)
plot (x, y, type="l")
x <- 1:20
y <- x ** 3
plot (x, y)
plot (x, y, type="l")
x <- 1:20
y <- x ** 3
plot (x, y)
plot (x, y, type="l")
plot (x, y)
points (rev (x), y)
lines (x, 8000-y)
plot (x, y)
points (rev (x), y)
lines (x, 8000-y)
y
x
8000-y
y
lines (x, y)
lines (x, 8000-y)
plot (x, y)
points (rev (x), y)
lines (x, 8000-y)
plot (x, y, type="l")
points (rev (x), y)
lines (x, 8000-y)
plot (x, y)
points (rev (x), y, pch=3)
points (x, 8000-y, pch="$")
points (rev (x), y, pch=4)
points (rev (x), y, pch=5)
points (x, 8000-y, pch="$")
x <- c(2,2,2,2,3,3,3,4,4,5,5,6)
hist (x)
x <- c(1:15)
y <- x ** 2
plot(x,y)
plot(x,y, pch=1)
plot(x,y, pch=2)
plot(x,y, pch=22)
plot(x,y, type = "l")
plot(x,y, type = "o")
x <- c(1:15)
y <- x ** 2
plot(x,y)
plot(x,y, type = "o")
x <- c(1:15)
y <- x ** 2
plot(x,y)
plot(x,y, type = "l")
x <- c(1:15)
y <- x ** 2
plot(x,y)
plot(x,y, type = "s")
plot(x,y, type = "s", lwd = 4)
plot(rev(x), y)
x <- c(1:15)
y <- x ** 2
plot(x,y)
plot(x,y, type = "s", lwd = 4)
plot(rev(x), y)
par()
plot(x,y)
plot(rev(x), y)
par()
plot(x,y)
plot(rev(x), y)
par(new=T)
plot(x,y)
plot(x,y, main = "Heart Disease", xlab = "Dias", ylab = "Num Pacientes")
text(4, 100, "Total de pacientes por dia")
test <- read.csv("~/Documents/MBA/data-analytics/titanic/test.csv")
View(test)
test <- read.csv("~/Documents/MBA/data-analytics/titanic/test.csv")
View(test)
train <- read.csv("~/Documents/MBA/data-analytics/titanic/train.csv")
View(train)
type(test)
str(train)
test <- read.csv("~/Documents/MBA/data-analytics/titanic/test.csv", stringsAsFactors = FALSE)
View(test)
str(train)
train <- read.csv("~/Documents/MBA/data-analytics/titanic/train.csv", stringsAsFactors = FALSE)
View(train)
test <- read.csv("~/Documents/MBA/data-analytics/titanic/test.csv")
View(test)
str(train)
train <- read.csv("~/Documents/MBA/data-analytics/titanic/train.csv")
View(train)
test <- read.csv("~/Documents/MBA/data-analytics/titanic/test.csv")
View(test)
str(train)
train$Survived
table(train$Survived)
sum(train$Survived)
sum(train)
sum(train$Survived)
table(train$Survived)
train$Survived
table(train$Survived)
sum(table(train$Survived))
table(train$Survived)
prop.table(table(train$Survived))
cl
clear
train$Survived
sum(table(train$Survived))
sum(table(test$PassengerId))
table(train$Survived)
prop.table(table(train$Survived))
test$Survived <- rep(0, 418)
test$Survived
View(teste)
View(test)
submit <- data.frame(PassegerId = test$PassengerId, Survived = test$Survived)
write.csv(submit, file="theyallperish.csv", row.names = FALSE)
write.csv(submit, file="theyallperish.csv", row.names = FALSE)
write.csv(submit, file="~/Documents/MBA/data-analytics/titanic/theyallperish.csv", row.names = FALSE)
submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
write.csv(submit, file="~/Documents/MBA/data-analytics/titanic/theyallperish.csv", row.names = FALSE)
prop.table(table(train$Survived))
test$Survived <- rep(1, 418)
test$Survived
submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
write.csv(submit, file="~/Documents/MBA/data-analytics/titanic/theyallperish.csv", row.names = FALSE)
0
0
prop.table(table(train$Survived))
test$Survived <- rep(0, 418)
test$Survived
submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
write.csv(submit, file="~/Documents/MBA/data-analytics/titanic/theyallperish.csv", row.names = FALSE)
write.csv(submit, file="~/Documents/MBA/data-analytics/titanic/theyallperish.csv"
, row.names = FALSE)
write.csv(submit, file="~/Documents/MBA/data-analytics/titanic/theyallperish.csv", row.names = FALSE)
summary(train$Sex)
prop.table(table(train$Sex, train$Survived))
prop.table(table(train$Survived))
prop.table(table(train$Sex, train$Survived))
prop.table(table(train$Sex, train$Survived), 1)
prop.table(table(train$Sex, train$Survived), 2)
prop.table(table(train$Sex, train$Survived), 3)
2
prop.table(table(train$Sex, train$Survived), 2)
prop.table(table(train$Sex, train$Survived), 1)
#proporcao por coluna (%)
prop.table(table(train$Sex, train$Survived), 2)
test$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1
View(test)
#cria um dataframe com 2 colunas e em seguida salva em um csv
submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
write.csv(submit, file="~/Documents/MBA/data-analytics/titanic/theyallperish.csv", row.names = FALSE)
View(submit)
summary(train$Age)
train$Age
train$Child <- 0
train$Child[train$Age < 18] <- 1
aggregate(Survived ~ Child ~ Sex, data = train, FUN = sum)
aggregate(Survived ~ Child ~ Sex, data = train, FUN = sum)
aggregate(Survived ~ Child ~ Sex, data=train, FUN=sum)
aggregate(Survived ~ Child + Sex, data=train, FUN=sum)
aggregate(Survived ~ Child + Sex, data=train, FUN=length)
aggregate(Survived ~ Child + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
aggregate(Survived ~ Child + Sex, data=train, FUN=sum)
aggregate(Survived ~ Child + Sex, data=train, FUN=length)
aggregate(Survived ~ Child + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
train$Fare
train$Fare2 <- '30+'
train$Fare2
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'
aggregate(Survived ~ Fare2 + Pclass + Sex2, data=train, FUN=function(x) {sum(x)/length(x)})
aggregate(Survived ~ Fare2 + Pclass + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
head(test)
test$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1
test$Survived[test$Sex == 'female' & test$Pclass == 3, test$Fare >= 20] <- 0
test$Survived[test$Sex == 'female' & test$Pclass == 3 test$Fare >= 20] <- 0
test$Survived[test$Sex == 'female' & test$Pclass == 3 & test$Fare >= 20] <- 0
submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
write.csv(submit, file="~/Documents/MBA/data-analytics/titanic/theyallperish.csv", row.names = FALSE)
#proporcao por linha (%)
prop.table(table(train$Sex, train$Survived), 1)
prop.table(table(train$Survived))
#proporcao por coluna (%)
prop.table(table(train$Sex, train$Survived), 2)
#proporcao por linha (%)
prop.table(table(train$Sex, train$Survived), 1)
#proporcao por coluna (%)
prop.table(table(train$Sex, train$Survived), 2)
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:rpart", unload=TRUE)
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:rpart", unload=TRUE)
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + Sibsp + Parch + Fare + Embarked,
data = train, method = "class")
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data = train, method = "class")
plot(fit)
text(fit)
install.packages('rattle')
install.packages("rpart.plot")
install.packages('rpart.plot')
install.packages('RColorBrewer')
library(rattle)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
install.packages('rattle')
library(rattle)
install.packages("rattle")
library(rattle)
install.packages("pkg-config")
library("pkgconfig", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages('rattle')
library(rattle)
detach("package:pkgconfig", unload=TRUE)
install.packages('rattle')
install.packages("RGtk2")
install.packages(c("MASS", "mgcv", "survival"))
system('brew install gtk+')
local({
if (Sys.info()[['sysname']] != 'Darwin') return()
.Platform$pkgType = 'mac.binary.el-capitan'
unlockBinding('.Platform', baseenv())
assign('.Platform', .Platform, 'package:base')
lockBinding('.Platform', baseenv())
options(
pkgType = 'both', install.packages.compile.from.source = 'always',
repos = 'https://macos.rbind.org'
)
})
install.packages(c('RGtk2', 'cairoDevice', 'rattle'))
library(rattle)
fancyRpartPlot(fit)
train$Age
train$Age[train$Age <= 6.5]
Prediction <- predict(fit, test, type="class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "myfirstdtree.csv", row.names = FALSE)
Prediction
write.csv(submit, file = "~/Documents/MBA/data-analytics/titanic/myfirstdtree.csv", row.names = FALSE)
View(fit)
aggregate(Survived ~ Child + Sex, data=train, FUN=sum)
aggregate(Survived ~ Fare2 + Pclass + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
text(fit)
plot(fit)
text(fit)
Prediction <- predict(fit, test, type="class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type="class")
Prediction
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(rattle)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data = train, method = "class")
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type="class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "~/Documents/MBA/data-analytics/titanic/myfirstdtree.csv", row.names = FALSE)
Prediction
fit <- rpart(Sex ~ Pclass + Survived + Age + SibSp + Parch + Fare + Embarked,
data = train, method = "class")
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(rattle)
fit <- rpart(Sex ~ Pclass + Survived + Age + SibSp + Parch + Fare + Embarked,
data = train, method = "class")
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data = train, method = "class")
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data = train,
method = "class",
control = rpart.control(minsplit = 2, cp = 0))
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type="class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "~/Documents/MBA/data-analytics/titanic/myfirstdtree.csv", row.names = FALSE)
Prediction
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data = train,
method = "class",
control = rpart.control(minsplit = 2, cp = 0))
new.fit <- prp(fit, snip = TRUE)$obj
fancyRpartPlot(fit)
quit
quit
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data = train,
method = "class",
control = rpart.control(minsplit = 4, cp = 0))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data = train,
method = "class",
control = rpart.control(minsplit = 4, cp = 0))
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(rattle)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data = train,
method = "class",
control = rpart.control(minsplit = 4, cp = 0))
fancyRpartPlot(fit)
train$Name[1]
test$Survived <- NA
combi <- rbind(train, test)
head(train)
head(test)
test$Child <- NA
test$Fare2 <- NA
combi <- rbind(train, test)
View(combi)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data = train,
method = "class")
fancyRpartPlot(fit)
combi$Name <- as.character(combi$Name)
combi$Name[1]
combi$Name[2]
combi$Name[1]
strsplit(combi$Name[1], split='[,.]')[[1]]
strsplit(combi$Name[1], split='[,.]')
strsplit(combi$Name[1], split='[,.]')[[1]]
combi
combi$Tittle <- sapply(combi$Name, FUN = function(x) {strsplit(x, split = '[,.]')[[1]][2]})
head(combi)
combi$Tittle <- sub(' ', '', combi$Tittle)
table(combi$Tittle)
setwd("~/Documents/MBA/data-analytics/hospece")
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(rattle)
train <- read.csv("./train.csv")
train
train <- read.csv("~/Documents/MBA/data-analytics/hospece/train.csv")
View(train)
test <- read.csv("./test.csv")
